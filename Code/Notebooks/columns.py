def drop_one_if_exists(df, column_name):
    if column_name in df.columns:
        df.drop(column_name, axis=1, inplace=True)
    return df

def drop_multiple_if_exists(df, column_names):
    for column_name in column_names:
        df = drop_one_if_exists(df, column_name)
    return df

def to_be_excluded():
    return ['Name', 
                'Message.WeldLog.dateTime',
                'WeldTimer', 
                'OutputFormat', 
                'Message.WeldLog.iActual1',
                'Message.WeldLog.iActual2', 
                'Message.WeldLog.iActual3', 
                'Message.WeldLog.partIdentString',
                'Message.WeldLog.pha1', 
                'Message.WeldLog.pha2', 
                'Message.WeldLog.pha3', 
                'Message.WeldLog.progNo', 
                'Message.WeldLog.timerName', 
                'Message.WeldLog.currentFactor',
                'Message.WeldLog.currentReferenceValue',
                'Message.WeldLog.currentActualValue',
                'Message.WeldLog.iDemand1',
                'Message.WeldLog.iDemand2',
                'Message.WeldLog.iDemand3',
                'Message.WeldLog.electrodeNo',
                'Message.WeldLog.iDemandStd',
                'Message.WeldLog.energyActualValue',
                'Message.WeldLog.energyRefValue',
                'Message.WeldLog.voltageActualValue',
                'Message.WeldLog.voltageRefValue', 
                'Message.WeldLog.contactWaitTime',
                'Message.WeldLog.monitorMode',
                'Message.WeldLog.monitorState',
                'Message.WeldLog.powerActualValue',
                'Message.WeldLog.powerRefValue',
                'Message.WeldLog.powerState',
                'Message.WeldLog.resistanceActualValue',
                'Message.WeldLog.resistanceRefValue',
                'Message.WeldLog.protRecord_ID',
                'Message.WeldLog.uipActualValue',
                'Message.WeldLog.uipRefValue',
                'Message.WeldLog.uirExpulsionTime',
                'Message.WeldLog.wear',
                'Message.WeldLog.tipDressCounter', 
                'Message.WeldLog.weldSpotCustDataP16_1',
                'Message.WeldLog.weldSpotCustDataP16_2', 
                'Message.WeldLog.weldSpotCustDataP16_3',
                'Message.WeldLog.weldSpotCustDataP16_4', 
                'Message.WeldLog.ForceCurve',
                'Message.WeldLog.normingTime',
                'Message.WeldLog.phaStd',
                'Message.WeldLog.t_iDemandStd',
                'Message.WeldLog.tActualStd',
                'Message.WeldLog.uirMeasuringActive',
                'Message.WeldLog.uirMonitoringActive',
                'Message.WeldLog.uirRegulationActive',
                'Message.WeldLog.weldTimeActualValue',
                'Message.WeldLog.weldspotRefIdent',
                'Message.WeldLog.wldEffectStabilisationFactor',
                'Message.WeldLog.normingTime',	
                'Message.WeldLog.phaStd',
                'Message.WeldLog.weldTimeRefValue',
                'Message.WeldLog.declineUsp',
                'Message.WeldLog.fqfActualValue',
                'Message.WeldLog.fqfMeasuringActive',	
                'Message.WeldLog.fqfMonCondLowerTol',
                'Message.WeldLog.fqfMonCondUpperTol',
                'Message.WeldLog.fqfMonLowerTol',
                'Message.WeldLog.fqfMonUpperTol',
                'Message.WeldLog.fqfRefValue',
                'Message.WeldLog.ilsts',
                'Message.WeldLog.measureState',
                'Message.WeldLog.nuggetDiameter',
                'Message.WeldLog.offsetUsp',
                'Message.WeldLog.pulseWidthActualValue',
                'Message.WeldLog.pulseWidthRefValue',
                'Message.WeldLog.regSplashTime',
                'Message.WeldLog.regSpotDiaActual',
                'Message.WeldLog.regSpotDiaMinDemand',
                'Message.WeldLog.regulation1',
                'Message.WeldLog.regulation2',
                'Message.WeldLog.regulation3',
                'Message.WeldLog.regulationStartTime',
                'Message.WeldLog.regulationState',
                'Message.WeldLog.regulationStd',
                'Message.WeldLog.regUsrUspJunction',
                'Message.WeldLog.regUsrUspMax',
                'Message.WeldLog.returnToConstantCurrent',
                'Message.WeldLog.reweldActive',
                'Message.WeldLog.sequenceRepeat',
                'Message.WeldLog.sequenceState',
                'Message.WeldLog.sequenceStateAdd',
                'Message.WeldLog.sg_ApertureDimInSuff',
                'Message.WeldLog.sg_Beam_UpArching',
                'Message.WeldLog.sg_Force_Corr',
                'Message.WeldLog.sg_Torque_Gp',
                'Message.WeldLog.sg_Wear_Length',
                'Message.WeldLog.sg_Weldspot_Geo_Wear',
                'Message.WeldLog.sgForce',
                'Message.WeldLog.sgForceSetPoint',
                'Message.WeldLog.sgMotorCurrent',
                'Message.WeldLog.sgMotorTemp',
                'Message.WeldLog.sgSagGc',
                'Message.WeldLog.sgSagGp',
                'Message.WeldLog.sgSagGpSetPoint',
                'Message.WeldLog.sgSheetThickness',
                'Message.WeldLog.sgSheetThicknessSetPoint',
                'Message.WeldLog.sgSpotWithSg',
                'Message.WeldLog.stabilisationFactorActValue',
                'Message.WeldLog.stabilisationFactorRefValue',
                'Message.WeldLog.thresholdStabilisationFactor',
                'Message.WeldLog.triggerTime',
                'Message.WeldLog.uipMonCondUpperTol',
                'Message.WeldLog.uirPsfCondTol',
                'Message.WeldLog.uirPsfLowerTol',
                'Message.WeldLog.uirQStoppActCntValue',
                'Message.WeldLog.uirQStoppRefCntValue',
                'Message.WeldLog.uirUipCondTol',
                'Message.WeldLog.uirUipLowerTol',
                'Message.WeldLog.uirUipUpperTol',
                'Message.WeldLog.uirWeldTimeProlongationActive',
                'Message.WeldLog.usp',
                'Message.WeldLog.wearPerCent',
                'Message.WeldLog.weldSpotCustDataP16_10',
                'Message.WeldLog.weldSpotCustDataP16_11',
                'Message.WeldLog.weldSpotCustDataP16_13',
                'Message.WeldLog.weldSpotCustDataP16_14',
                'Message.WeldLog.weldSpotCustDataP16_15',
                'Message.WeldLog.weldSpotCustDataP16_16',
                'Message.WeldLog.weldSpotCustDataP16_17',
                'Message.WeldLog.weldSpotCustDataP16_5',
                'Message.WeldLog.weldSpotCustDataP16_7', 
                'Message.WeldLog.weldSpotCustDataP16_8',
                'Message.WeldLog.weldSpotCustDataP16_9',
                'Message.WeldLog.weldSpotCustDataP32_12',
                'Message.WeldLog.weldSpotCustDataP32_18',
                'Message.WeldLog.weldSpotCustDataP32_6',
                'Message.WeldLog.weldspotRefIdent',
                'Message.WeldLog.wldEffectStabilisationFactor',
                'Message.WeldLog.xqrMeasuringActive',
                'Message.WeldLog.xqrModeOff',
                'Message.WeldLog.xqrMonitoringActive',
                'Message.WeldLog.xqrRegulationActive',
                'Message.WeldLog.xqrWeldTimeProlongationActive']
    
def to_be_renamed():
    return { 'TimeStamp':'TimeStamp', 
            'Message.WeldLog.spotName':'SpotName', 
            'Message.WeldLog.CurrentCurve':'CurrentCurve',
            'Message.WeldLog.VoltageCurve':'VoltageCurve'}